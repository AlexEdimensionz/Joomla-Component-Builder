CREATE TABLE IF NOT EXISTS `#__componentbuilder_component` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
	`asset_id` INT(255) UNSIGNED NOT NULL DEFAULT '0',
	`add_admin_event` TINYINT(1) NOT NULL DEFAULT '0',
	`add_css` TINYINT(1) NOT NULL DEFAULT '0',
	`add_license` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_dashboard_methods` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_helper_admin` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_helper_site` TINYINT(1) NOT NULL DEFAULT '0',
	`add_site_event` TINYINT(1) NOT NULL DEFAULT '0',
	`add_sql` TINYINT(1) NOT NULL DEFAULT '0',
	`addadmin_views` TEXT NOT NULL DEFAULT '',
	`addconfig` TEXT NOT NULL DEFAULT '',
	`addcontributors` TEXT NOT NULL DEFAULT '',
	`addcustom_admin_views` TEXT NOT NULL DEFAULT '',
	`addcustommenus` TEXT NOT NULL DEFAULT '',
	`addfiles` TEXT NOT NULL DEFAULT '',
	`addfolders` TEXT NOT NULL DEFAULT '',
	`addfootable` TINYINT(1) NOT NULL DEFAULT '0',
	`addreadme` TINYINT(1) NOT NULL DEFAULT '0',
	`addsite_views` TEXT NOT NULL DEFAULT '',
	`adduikit` TINYINT(1) NOT NULL DEFAULT '0',
	`author` VARCHAR(255) NOT NULL DEFAULT '',
	`bom` CHAR(64) NOT NULL DEFAULT '',
	`companyname` CHAR(64) NOT NULL DEFAULT '',
	`component_version` CHAR(64) NOT NULL DEFAULT '',
	`copyright` VARCHAR(255) NOT NULL DEFAULT '',
	`creatuserhelper` TINYINT(1) NOT NULL DEFAULT '0',
	`css` TEXT NOT NULL DEFAULT '',
	`dashboard_tab` TEXT NOT NULL DEFAULT '',
	`debug_linenr` TINYINT(1) NOT NULL DEFAULT '0',
	`description` TEXT NOT NULL DEFAULT '',
	`email` VARCHAR(255) NOT NULL DEFAULT '',
	`emptycontributors` TINYINT(1) NOT NULL DEFAULT '0',
	`image` CHAR(64) NOT NULL DEFAULT '',
	`license` VARCHAR(255) NOT NULL DEFAULT '',
	`license_type` TINYINT(1) NOT NULL DEFAULT '0',
	`name` CHAR(64) NOT NULL DEFAULT '',
	`name_code` VARCHAR(255) NOT NULL DEFAULT '',
	`not_required` INT(1) NOT NULL DEFAULT '0',
	`number` INT(11) NOT NULL DEFAULT '0',
	`php_admin_event` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_dashboard_methods` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_helper_admin` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_helper_site` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_site_event` MEDIUMTEXT NOT NULL DEFAULT '',
	`readme` TEXT NOT NULL DEFAULT '',
	`short_description` VARCHAR(255) NOT NULL DEFAULT '',
	`sql` MEDIUMTEXT NOT NULL DEFAULT '',
	`sql_tweak` TEXT NOT NULL DEFAULT '',
	`system_name` VARCHAR(255) NOT NULL DEFAULT '',
	`version_update` TEXT NOT NULL DEFAULT '',
	`website` CHAR(255) NOT NULL DEFAULT '',
	`whmcs_key` VARCHAR(255) NOT NULL DEFAULT '',
	`whmcs_url` VARCHAR(255) NOT NULL DEFAULT '',
	`params` TEXT NOT NULL DEFAULT '',
	`published` tinyint(1) NOT NULL DEFAULT '1',
	`created_by` int(11) NOT NULL DEFAULT '0',
	`modified_by` int(11) NOT NULL DEFAULT '0',
	`created` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`modified` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`checked_out` int(11) NOT NULL,
	`checked_out_time` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`version` int(11) NOT NULL DEFAULT '1',
	`hits` int(11) NOT NULL DEFAULT '0',
	`access` int(11) DEFAULT NULL,
	`ordering` int(11) NOT NULL DEFAULT '0',
	PRIMARY KEY  (`id`),
	KEY `idx_access` (`access`),
	KEY `idx_checkout` (`checked_out`),
	KEY `idx_createdby` (`created_by`),
	KEY `idx_modifiedby` (`modified_by`),
	KEY `idx_state` (`published`),
	KEY `idx_name_code` (`name_code`),
	KEY `idx_debug_linenr` (`debug_linenr`),
	KEY `idx_addfootable` (`addfootable`),
	KEY `idx_name` (`name`),
	KEY `idx_emptycontributors` (`emptycontributors`),
	KEY `idx_creatuserhelper` (`creatuserhelper`),
	KEY `idx_addreadme` (`addreadme`),
	KEY `idx_add_license` (`add_license`),
	KEY `idx_license_type` (`license_type`),
	KEY `idx_adduikit` (`adduikit`),
	KEY `idx_add_css` (`add_css`),
	KEY `idx_add_php_helper_admin` (`add_php_helper_admin`),
	KEY `idx_add_admin_event` (`add_admin_event`),
	KEY `idx_add_php_helper_site` (`add_php_helper_site`),
	KEY `idx_add_site_event` (`add_site_event`),
	KEY `idx_add_sql` (`add_sql`),
	KEY `idx_add_php_dashboard_methods` (`add_php_dashboard_methods`)
) ENGINE=MyISAM AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `#__componentbuilder_admin_view` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
	`asset_id` INT(255) UNSIGNED NOT NULL DEFAULT '0',
	`add_css_view` TINYINT(1) NOT NULL DEFAULT '0',
	`add_css_views` TINYINT(1) NOT NULL DEFAULT '0',
	`add_javascript_view_file` TINYINT(1) NOT NULL DEFAULT '0',
	`add_javascript_view_footer` TINYINT(1) NOT NULL DEFAULT '0',
	`add_javascript_views_file` TINYINT(1) NOT NULL DEFAULT '0',
	`add_javascript_views_footer` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_after_delete` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_ajax` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_allowedit` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_batchcopy` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_batchmove` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_before_delete` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_getitem` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_getitems` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_getlistquery` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_postsavehook` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_save` TINYINT(1) NOT NULL DEFAULT '0',
	`add_sql` TINYINT(1) NOT NULL DEFAULT '0',
	`addconditions` TEXT NOT NULL DEFAULT '',
	`addfields` TEXT NOT NULL DEFAULT '',
	`addlinked_views` TEXT NOT NULL DEFAULT '',
	`addpermissions` TEXT NOT NULL DEFAULT '',
	`addtables` TEXT NOT NULL DEFAULT '',
	`addtabs` TEXT NOT NULL DEFAULT '',
	`ajax_input` TEXT NOT NULL DEFAULT '',
	`css_view` TEXT NOT NULL DEFAULT '',
	`css_views` TEXT NOT NULL DEFAULT '',
	`description` TEXT NOT NULL DEFAULT '',
	`icon` CHAR(64) NOT NULL DEFAULT '',
	`icon_add` CHAR(64) NOT NULL DEFAULT '',
	`icon_category` CHAR(64) NOT NULL DEFAULT '',
	`javascript_view_file` TEXT NOT NULL DEFAULT '',
	`javascript_view_footer` TEXT NOT NULL DEFAULT '',
	`javascript_views_file` TEXT NOT NULL DEFAULT '',
	`javascript_views_footer` TEXT NOT NULL DEFAULT '',
	`name_list` CHAR(64) NOT NULL DEFAULT '',
	`name_single` CHAR(64) NOT NULL DEFAULT '',
	`not_required` INT(1) NOT NULL DEFAULT '0',
	`php_after_delete` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_ajaxmethod` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_allowedit` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_batchcopy` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_batchmove` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_before_delete` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_getitem` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_getitems` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_getlistquery` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_postsavehook` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_save` MEDIUMTEXT NOT NULL DEFAULT '',
	`short_description` VARCHAR(255) NOT NULL DEFAULT '',
	`source` TINYINT(1) NOT NULL DEFAULT '0',
	`sql` MEDIUMTEXT NOT NULL DEFAULT '',
	`system_name` VARCHAR(255) NOT NULL DEFAULT '',
	`type` INT(11) NOT NULL DEFAULT '0',
	`params` TEXT NOT NULL DEFAULT '',
	`published` tinyint(1) NOT NULL DEFAULT '1',
	`created_by` int(11) NOT NULL DEFAULT '0',
	`modified_by` int(11) NOT NULL DEFAULT '0',
	`created` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`modified` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`checked_out` int(11) NOT NULL,
	`checked_out_time` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`version` int(11) NOT NULL DEFAULT '1',
	`hits` int(11) NOT NULL DEFAULT '0',
	`access` int(11) DEFAULT NULL,
	`ordering` int(11) NOT NULL DEFAULT '0',
	PRIMARY KEY  (`id`),
	KEY `idx_access` (`access`),
	KEY `idx_checkout` (`checked_out`),
	KEY `idx_createdby` (`created_by`),
	KEY `idx_modifiedby` (`modified_by`),
	KEY `idx_state` (`published`),
	KEY `idx_name_single` (`name_single`),
	KEY `idx_name_list` (`name_list`),
	KEY `idx_type` (`type`),
	KEY `idx_add_php_ajax` (`add_php_ajax`),
	KEY `idx_source` (`source`),
	KEY `idx_add_php_getitem` (`add_php_getitem`),
	KEY `idx_add_php_getitems` (`add_php_getitems`),
	KEY `idx_add_css_view` (`add_css_view`),
	KEY `idx_add_php_getlistquery` (`add_php_getlistquery`),
	KEY `idx_add_php_save` (`add_php_save`),
	KEY `idx_add_css_views` (`add_css_views`),
	KEY `idx_add_php_postsavehook` (`add_php_postsavehook`),
	KEY `idx_add_php_allowedit` (`add_php_allowedit`),
	KEY `idx_add_javascript_view_file` (`add_javascript_view_file`),
	KEY `idx_add_php_batchcopy` (`add_php_batchcopy`),
	KEY `idx_add_php_batchmove` (`add_php_batchmove`),
	KEY `idx_add_javascript_view_footer` (`add_javascript_view_footer`),
	KEY `idx_add_php_before_delete` (`add_php_before_delete`),
	KEY `idx_add_php_after_delete` (`add_php_after_delete`),
	KEY `idx_add_javascript_views_file` (`add_javascript_views_file`),
	KEY `idx_add_sql` (`add_sql`),
	KEY `idx_add_javascript_views_footer` (`add_javascript_views_footer`)
) ENGINE=MyISAM AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `#__componentbuilder_custom_admin_view` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
	`asset_id` INT(255) UNSIGNED NOT NULL DEFAULT '0',
	`add_css` TINYINT(1) NOT NULL DEFAULT '0',
	`add_css_document` TINYINT(1) NOT NULL DEFAULT '0',
	`add_custom_button` INT(1) NOT NULL DEFAULT '0',
	`add_js_document` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_document` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_jview` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_jview_display` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_view` TINYINT(1) NOT NULL DEFAULT '0',
	`alias` VARCHAR(255) NOT NULL DEFAULT '',
	`css` TEXT NOT NULL DEFAULT '',
	`css_document` TEXT NOT NULL DEFAULT '',
	`custom_button` TEXT NOT NULL DEFAULT '',
	`custom_get` TEXT NOT NULL DEFAULT '',
	`default` TEXT NOT NULL DEFAULT '',
	`description` VARCHAR(255) NOT NULL DEFAULT '',
	`dynamic_get` INT(11) NOT NULL DEFAULT '0',
	`js_document` TEXT NOT NULL DEFAULT '',
	`main_get` INT(11) NOT NULL DEFAULT '0',
	`name` VARCHAR(255) NOT NULL DEFAULT '',
	`not_required` INT(1) NOT NULL DEFAULT '0',
	`php_controller` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_document` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_jview` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_jview_display` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_model` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_view` MEDIUMTEXT NOT NULL DEFAULT '',
	`snippet` INT(11) NOT NULL DEFAULT '0',
	`system_name` VARCHAR(255) NOT NULL DEFAULT '',
	`params` TEXT NOT NULL DEFAULT '',
	`published` tinyint(1) NOT NULL DEFAULT '1',
	`created_by` int(11) NOT NULL DEFAULT '0',
	`modified_by` int(11) NOT NULL DEFAULT '0',
	`created` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`modified` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`checked_out` int(11) NOT NULL,
	`checked_out_time` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`version` int(11) NOT NULL DEFAULT '1',
	`hits` int(11) NOT NULL DEFAULT '0',
	`access` int(11) DEFAULT NULL,
	`ordering` int(11) NOT NULL DEFAULT '0',
	PRIMARY KEY  (`id`),
	KEY `idx_access` (`access`),
	KEY `idx_checkout` (`checked_out`),
	KEY `idx_createdby` (`created_by`),
	KEY `idx_modifiedby` (`modified_by`),
	KEY `idx_state` (`published`),
	KEY `idx_name` (`name`),
	KEY `idx_alias` (`alias`),
	KEY `idx_main_get` (`main_get`),
	KEY `idx_add_php_document` (`add_php_document`),
	KEY `idx_dynamic_get` (`dynamic_get`),
	KEY `idx_add_php_view` (`add_php_view`),
	KEY `idx_add_php_jview_display` (`add_php_jview_display`),
	KEY `idx_add_php_jview` (`add_php_jview`),
	KEY `idx_add_js_document` (`add_js_document`),
	KEY `idx_add_custom_button` (`add_custom_button`),
	KEY `idx_add_css_document` (`add_css_document`),
	KEY `idx_add_css` (`add_css`)
) ENGINE=MyISAM AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `#__componentbuilder_site_view` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
	`asset_id` INT(255) UNSIGNED NOT NULL DEFAULT '0',
	`add_css` TINYINT(1) NOT NULL DEFAULT '0',
	`add_css_document` TINYINT(1) NOT NULL DEFAULT '0',
	`add_custom_button` INT(1) NOT NULL DEFAULT '0',
	`add_js_document` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_ajax` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_document` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_jview` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_jview_display` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_view` TINYINT(1) NOT NULL DEFAULT '0',
	`ajax_input` TEXT NOT NULL DEFAULT '',
	`alias` VARCHAR(255) NOT NULL DEFAULT '',
	`button_position` TINYINT(1) NOT NULL DEFAULT '1',
	`css` TEXT NOT NULL DEFAULT '',
	`css_document` TEXT NOT NULL DEFAULT '',
	`custom_button` TEXT NOT NULL DEFAULT '',
	`custom_get` TEXT NOT NULL DEFAULT '',
	`default` TEXT NOT NULL DEFAULT '',
	`description` VARCHAR(255) NOT NULL DEFAULT '',
	`dynamic_get` INT(11) NOT NULL DEFAULT '0',
	`js_document` TEXT NOT NULL DEFAULT '',
	`main_get` INT(11) NOT NULL DEFAULT '0',
	`name` VARCHAR(255) NOT NULL DEFAULT '',
	`not_required` INT(1) NOT NULL DEFAULT '0',
	`php_ajaxmethod` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_controller` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_document` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_jview` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_jview_display` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_model` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_view` MEDIUMTEXT NOT NULL DEFAULT '',
	`snippet` INT(11) NOT NULL DEFAULT '0',
	`system_name` VARCHAR(255) NOT NULL DEFAULT '',
	`params` TEXT NOT NULL DEFAULT '',
	`published` tinyint(1) NOT NULL DEFAULT '1',
	`created_by` int(11) NOT NULL DEFAULT '0',
	`modified_by` int(11) NOT NULL DEFAULT '0',
	`created` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`modified` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`checked_out` int(11) NOT NULL,
	`checked_out_time` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`version` int(11) NOT NULL DEFAULT '1',
	`hits` int(11) NOT NULL DEFAULT '0',
	`access` int(11) DEFAULT NULL,
	`ordering` int(11) NOT NULL DEFAULT '0',
	PRIMARY KEY  (`id`),
	KEY `idx_access` (`access`),
	KEY `idx_checkout` (`checked_out`),
	KEY `idx_createdby` (`created_by`),
	KEY `idx_modifiedby` (`modified_by`),
	KEY `idx_state` (`published`),
	KEY `idx_name` (`name`),
	KEY `idx_alias` (`alias`),
	KEY `idx_add_php_ajax` (`add_php_ajax`),
	KEY `idx_main_get` (`main_get`),
	KEY `idx_dynamic_get` (`dynamic_get`),
	KEY `idx_add_php_document` (`add_php_document`),
	KEY `idx_add_php_view` (`add_php_view`),
	KEY `idx_add_php_jview_display` (`add_php_jview_display`),
	KEY `idx_add_custom_button` (`add_custom_button`),
	KEY `idx_add_php_jview` (`add_php_jview`),
	KEY `idx_add_js_document` (`add_js_document`),
	KEY `idx_button_position` (`button_position`),
	KEY `idx_add_css_document` (`add_css_document`),
	KEY `idx_add_css` (`add_css`)
) ENGINE=MyISAM AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `#__componentbuilder_template` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
	`asset_id` INT(255) UNSIGNED NOT NULL DEFAULT '0',
	`add_php_view` TINYINT(1) NOT NULL DEFAULT '0',
	`alias` VARCHAR(255) NOT NULL DEFAULT '',
	`description` VARCHAR(255) NOT NULL DEFAULT '',
	`dynamic_get` INT(11) NOT NULL DEFAULT '0',
	`name` VARCHAR(255) NOT NULL DEFAULT '',
	`not_required` INT(1) NOT NULL DEFAULT '0',
	`php_view` MEDIUMTEXT NOT NULL DEFAULT '',
	`snippet` INT(11) NOT NULL DEFAULT '0',
	`template` TEXT NOT NULL DEFAULT '',
	`params` TEXT NOT NULL DEFAULT '',
	`published` tinyint(1) NOT NULL DEFAULT '1',
	`created_by` int(11) NOT NULL DEFAULT '0',
	`modified_by` int(11) NOT NULL DEFAULT '0',
	`created` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`modified` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`checked_out` int(11) NOT NULL,
	`checked_out_time` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`version` int(11) NOT NULL DEFAULT '1',
	`hits` int(11) NOT NULL DEFAULT '0',
	`access` int(11) DEFAULT NULL,
	`ordering` int(11) NOT NULL DEFAULT '0',
	PRIMARY KEY  (`id`),
	KEY `idx_access` (`access`),
	KEY `idx_checkout` (`checked_out`),
	KEY `idx_createdby` (`created_by`),
	KEY `idx_modifiedby` (`modified_by`),
	KEY `idx_state` (`published`),
	KEY `idx_name` (`name`),
	KEY `idx_alias` (`alias`),
	KEY `idx_add_php_view` (`add_php_view`),
	KEY `idx_dynamic_get` (`dynamic_get`)
) ENGINE=MyISAM AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `#__componentbuilder_layout` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
	`asset_id` INT(255) UNSIGNED NOT NULL DEFAULT '0',
	`add_php_view` TINYINT(1) NOT NULL DEFAULT '0',
	`alias` VARCHAR(255) NOT NULL DEFAULT '',
	`description` VARCHAR(255) NOT NULL DEFAULT '',
	`dynamic_get` INT(11) NOT NULL DEFAULT '0',
	`layout` TEXT NOT NULL DEFAULT '',
	`name` VARCHAR(255) NOT NULL DEFAULT '',
	`not_required` INT(1) NOT NULL DEFAULT '0',
	`php_view` MEDIUMTEXT NOT NULL DEFAULT '',
	`snippet` INT(11) NOT NULL DEFAULT '0',
	`params` TEXT NOT NULL DEFAULT '',
	`published` tinyint(1) NOT NULL DEFAULT '1',
	`created_by` int(11) NOT NULL DEFAULT '0',
	`modified_by` int(11) NOT NULL DEFAULT '0',
	`created` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`modified` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`checked_out` int(11) NOT NULL,
	`checked_out_time` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`version` int(11) NOT NULL DEFAULT '1',
	`hits` int(11) NOT NULL DEFAULT '0',
	`access` int(11) DEFAULT NULL,
	`ordering` int(11) NOT NULL DEFAULT '0',
	PRIMARY KEY  (`id`),
	KEY `idx_access` (`access`),
	KEY `idx_checkout` (`checked_out`),
	KEY `idx_createdby` (`created_by`),
	KEY `idx_modifiedby` (`modified_by`),
	KEY `idx_state` (`published`),
	KEY `idx_name` (`name`),
	KEY `idx_alias` (`alias`),
	KEY `idx_dynamic_get` (`dynamic_get`),
	KEY `idx_add_php_view` (`add_php_view`)
) ENGINE=MyISAM AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `#__componentbuilder_dynamic_get` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
	`asset_id` INT(255) UNSIGNED NOT NULL DEFAULT '0',
	`add_php_after_getitem` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_after_getitems` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_before_getitem` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_before_getitems` TINYINT(1) NOT NULL DEFAULT '0',
	`add_php_getlistquery` TINYINT(1) NOT NULL DEFAULT '0',
	`addcalculation` CHAR NOT NULL DEFAULT '',
	`db_selection` TEXT NOT NULL DEFAULT '',
	`db_table_main` VARCHAR(255) NOT NULL DEFAULT '',
	`filter` TEXT NOT NULL DEFAULT '',
	`getcustom` VARCHAR(255) NOT NULL DEFAULT '',
	`gettype` TINYINT(1) NOT NULL DEFAULT '0',
	`global` TEXT NOT NULL DEFAULT '',
	`join_db_table` TEXT NOT NULL DEFAULT '',
	`join_view_table` TEXT NOT NULL DEFAULT '',
	`main_source` TINYINT(1) NOT NULL DEFAULT '0',
	`name` VARCHAR(255) NOT NULL DEFAULT '',
	`not_required` INT(1) NOT NULL DEFAULT '0',
	`order` TEXT NOT NULL DEFAULT '',
	`pagination` TINYINT(1) NOT NULL DEFAULT '1',
	`php_after_getitem` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_after_getitems` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_before_getitem` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_before_getitems` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_calculation` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_custom_get` MEDIUMTEXT NOT NULL DEFAULT '',
	`php_getlistquery` MEDIUMTEXT NOT NULL DEFAULT '',
	`view_selection` TEXT NOT NULL DEFAULT '',
	`view_table_main` INT(11) NOT NULL DEFAULT '0',
	`where` TEXT NOT NULL DEFAULT '',
	`params` TEXT NOT NULL DEFAULT '',
	`published` tinyint(1) NOT NULL DEFAULT '1',
	`created_by` int(11) NOT NULL DEFAULT '0',
	`modified_by` int(11) NOT NULL DEFAULT '0',
	`created` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`modified` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`checked_out` int(11) NOT NULL,
	`checked_out_time` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`version` int(11) NOT NULL DEFAULT '1',
	`hits` int(11) NOT NULL DEFAULT '0',
	`access` int(11) DEFAULT NULL,
	`ordering` int(11) NOT NULL DEFAULT '0',
	PRIMARY KEY  (`id`),
	KEY `idx_access` (`access`),
	KEY `idx_checkout` (`checked_out`),
	KEY `idx_createdby` (`created_by`),
	KEY `idx_modifiedby` (`modified_by`),
	KEY `idx_state` (`published`),
	KEY `idx_name` (`name`),
	KEY `idx_main_source` (`main_source`),
	KEY `idx_gettype` (`gettype`),
	KEY `idx_getcustom` (`getcustom`),
	KEY `idx_pagination` (`pagination`),
	KEY `idx_add_php_before_getitem` (`add_php_before_getitem`),
	KEY `idx_add_php_after_getitem` (`add_php_after_getitem`),
	KEY `idx_add_php_getlistquery` (`add_php_getlistquery`),
	KEY `idx_add_php_before_getitems` (`add_php_before_getitems`),
	KEY `idx_add_php_after_getitems` (`add_php_after_getitems`)
) ENGINE=MyISAM AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `#__componentbuilder_snippet` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
	`asset_id` INT(255) UNSIGNED NOT NULL DEFAULT '0',
	`description` TEXT NOT NULL DEFAULT '',
	`heading` VARCHAR(255) NOT NULL DEFAULT '',
	`name` VARCHAR(255) NOT NULL DEFAULT '',
	`snippet` TEXT NOT NULL DEFAULT '',
	`type` INT(11) NOT NULL DEFAULT '0',
	`url` VARCHAR(255) NOT NULL DEFAULT '',
	`usage` TEXT NOT NULL DEFAULT '',
	`params` TEXT NOT NULL DEFAULT '',
	`published` tinyint(1) NOT NULL DEFAULT '1',
	`created_by` int(11) NOT NULL DEFAULT '0',
	`modified_by` int(11) NOT NULL DEFAULT '0',
	`created` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`modified` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`checked_out` int(11) NOT NULL,
	`checked_out_time` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`version` int(11) NOT NULL DEFAULT '1',
	`hits` int(11) NOT NULL DEFAULT '0',
	`access` int(11) DEFAULT NULL,
	`ordering` int(11) NOT NULL DEFAULT '0',
	PRIMARY KEY  (`id`),
	KEY `idx_access` (`access`),
	KEY `idx_checkout` (`checked_out`),
	KEY `idx_createdby` (`created_by`),
	KEY `idx_modifiedby` (`modified_by`),
	KEY `idx_state` (`published`),
	KEY `idx_name` (`name`),
	KEY `idx_type` (`type`)
) ENGINE=MyISAM AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `#__componentbuilder_field` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
	`asset_id` INT(255) UNSIGNED NOT NULL DEFAULT '0',
	`add_css_view` TINYINT(1) NOT NULL DEFAULT '0',
	`add_css_views` TINYINT(1) NOT NULL DEFAULT '0',
	`add_javascript_view_footer` TINYINT(1) NOT NULL DEFAULT '0',
	`add_javascript_views_footer` TINYINT(1) NOT NULL DEFAULT '0',
	`catid` INT(11) NOT NULL DEFAULT '0',
	`css_view` TEXT NOT NULL DEFAULT '',
	`css_views` TEXT NOT NULL DEFAULT '',
	`datadefault` CHAR(64) NOT NULL DEFAULT '',
	`datadefault_other` CHAR(64) NOT NULL DEFAULT '',
	`datalenght` CHAR(64) NOT NULL DEFAULT '',
	`datalenght_other` CHAR(64) NOT NULL DEFAULT '',
	`datatype` CHAR(64) NOT NULL DEFAULT '',
	`fieldtype` INT(11) NOT NULL DEFAULT '0',
	`indexes` CHAR(64) NOT NULL DEFAULT '',
	`javascript_view_footer` TEXT NOT NULL DEFAULT '',
	`javascript_views_footer` TEXT NOT NULL DEFAULT '',
	`name` VARCHAR(255) NOT NULL DEFAULT '',
	`not_required` INT(1) NOT NULL DEFAULT '0',
	`null_switch` CHAR(64) NOT NULL DEFAULT '',
	`store` INT(11) NOT NULL DEFAULT '0',
	`xml` TEXT NOT NULL DEFAULT '',
	`params` TEXT NOT NULL DEFAULT '',
	`published` tinyint(1) NOT NULL DEFAULT '1',
	`created_by` int(11) NOT NULL DEFAULT '0',
	`modified_by` int(11) NOT NULL DEFAULT '0',
	`created` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`modified` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`checked_out` int(11) NOT NULL,
	`checked_out_time` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`version` int(11) NOT NULL DEFAULT '1',
	`hits` int(11) NOT NULL DEFAULT '0',
	`access` int(11) DEFAULT NULL,
	`ordering` int(11) NOT NULL DEFAULT '0',
	PRIMARY KEY  (`id`),
	KEY `idx_access` (`access`),
	KEY `idx_checkout` (`checked_out`),
	KEY `idx_createdby` (`created_by`),
	KEY `idx_modifiedby` (`modified_by`),
	KEY `idx_state` (`published`),
	KEY `idx_name` (`name`),
	KEY `idx_fieldtype` (`fieldtype`),
	KEY `idx_datatype` (`datatype`),
	KEY `idx_indexes` (`indexes`),
	KEY `idx_null_switch` (`null_switch`),
	KEY `idx_datalenght_other` (`datalenght_other`),
	KEY `idx_datadefault` (`datadefault`),
	KEY `idx_datadefault_other` (`datadefault_other`),
	KEY `idx_datalenght` (`datalenght`),
	KEY `idx_add_css_view` (`add_css_view`),
	KEY `idx_catid` (`catid`),
	KEY `idx_add_css_views` (`add_css_views`),
	KEY `idx_add_javascript_view_footer` (`add_javascript_view_footer`),
	KEY `idx_add_javascript_views_footer` (`add_javascript_views_footer`)
) ENGINE=MyISAM AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `#__componentbuilder_fieldtype` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
	`asset_id` INT(255) UNSIGNED NOT NULL DEFAULT '0',
	`catid` INT(11) NOT NULL DEFAULT '0',
	`description` TEXT NOT NULL DEFAULT '',
	`name` VARCHAR(255) NOT NULL DEFAULT '',
	`properties` TEXT NOT NULL DEFAULT '',
	`short_description` VARCHAR(255) NOT NULL DEFAULT '',
	`params` TEXT NOT NULL DEFAULT '',
	`published` tinyint(1) NOT NULL DEFAULT '1',
	`created_by` int(11) NOT NULL DEFAULT '0',
	`modified_by` int(11) NOT NULL DEFAULT '0',
	`created` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`modified` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`checked_out` int(11) NOT NULL,
	`checked_out_time` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`version` int(11) NOT NULL DEFAULT '1',
	`hits` int(11) NOT NULL DEFAULT '0',
	`access` int(11) DEFAULT NULL,
	`ordering` int(11) NOT NULL DEFAULT '0',
	PRIMARY KEY  (`id`),
	KEY `idx_access` (`access`),
	KEY `idx_checkout` (`checked_out`),
	KEY `idx_createdby` (`created_by`),
	KEY `idx_modifiedby` (`modified_by`),
	KEY `idx_state` (`published`),
	KEY `idx_name` (`name`),
	KEY `idx_catid` (`catid`)
) ENGINE=MyISAM AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `#__componentbuilder_help_document` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
	`asset_id` INT(255) UNSIGNED NOT NULL DEFAULT '0',
	`admin_view` CHAR(255) NOT NULL DEFAULT '',
	`alias` CHAR(64) NOT NULL DEFAULT '',
	`article` TINYINT(1) NOT NULL DEFAULT '0',
	`content` TEXT NOT NULL DEFAULT '',
	`groups` TEXT NOT NULL DEFAULT '',
	`location` TINYINT(1) NOT NULL DEFAULT '0',
	`not_required` INT(1) NOT NULL DEFAULT '0',
	`site_view` CHAR(255) NOT NULL DEFAULT '',
	`target` TINYINT(1) NOT NULL DEFAULT '0',
	`title` CHAR(64) NOT NULL DEFAULT '',
	`type` TINYINT(1) NOT NULL DEFAULT '0',
	`url` VARCHAR(255) NOT NULL DEFAULT '',
	`params` TEXT NOT NULL DEFAULT '',
	`published` tinyint(1) NOT NULL DEFAULT '1',
	`created_by` int(11) NOT NULL DEFAULT '0',
	`modified_by` int(11) NOT NULL DEFAULT '0',
	`created` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`modified` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`checked_out` int(11) NOT NULL,
	`checked_out_time` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	`version` int(11) NOT NULL DEFAULT '1',
	`hits` int(11) NOT NULL DEFAULT '0',
	`ordering` int(11) NOT NULL DEFAULT '0',
	PRIMARY KEY  (`id`),
	KEY `idx_checkout` (`checked_out`),
	KEY `idx_createdby` (`created_by`),
	KEY `idx_modifiedby` (`modified_by`),
	KEY `idx_state` (`published`),
	KEY `idx_title` (`title`),
	KEY `idx_type` (`type`),
	KEY `idx_location` (`location`),
	KEY `idx_target` (`target`),
	KEY `idx_alias` (`alias`),
	KEY `idx_article` (`article`)
) ENGINE=MyISAM AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;



















--
-- Dumping data for table `#__componentbuilder_fieldtype`
--

INSERT INTO `#__componentbuilder_fieldtype` (`id`, `asset_id`, `catid`, `description`, `name`, `properties`, `short_description`, `params`, `published`, `created_by`, `modified_by`, `created`, `modified`, `checked_out`, `checked_out_time`, `version`, `hits`, `access`, `ordering`) VALUES
(8, 2989, '', 'The Editor field type provides a WYSIWYG editor.', 'Editor', '{\"name\":[\"type\",\"name\",\"label\",\"default\",\"width\",\"height\",\"cols\",\"rows\",\"buttons\",\"hide\",\"editor\",\"filter\",\"required\",\"showon\"],\"example\":[\"editor\",\"mytextblock\",\"Test Field\",\"Some text\",\"\",\"\",\"\",\"\",\"false\",\"\",\"\",\"safehtml\",\"\",\"\"],\"adjustable\":[\"0\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\"],\"mandatory\":[\"1\",\"1\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],\"translatable\":[\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],\"description\":[\"(mandatory) must be editor.\",\"(mandatory) is the unique name of the parameter.\",\"(mandatory) (translatable) is the descriptive title of the field.\",\"(optional) (not translatable) is the default value.\",\"(optional) defines the width (in pixels) of the wysiwyg editor and defaults to 100%.\",\"(optional) defines the height (in pixels) of the wysiwyg editor and defaults to 250px.\",\"(optional) defines the width of the editor (in columns).\",\"(optional) defines the height of the editor (in rows).\",\"(optional) can be an array of plugin buttons to be excluded or set to false. The default editors-xtd are: article, image, pagebreak and readmore.\",\"(optional) array of plugin buttons to be hidden. eg... set buttons=\\\"true\\\" hide=\\\"readmore,pagebreak\\\"\",\"specifies the editor to be used and can include two options (editor=\\\"desired|alternative\\\")\",\"(optional) allow the system to save certain html tags or raw data.\",\"(optional) The field must be filled before submitting the form.\",\"(optional) show this field on the bases of the value in another field.\"]}', 'provides an editor area field.', '', 1, 845, 450, '2015-03-28 06:44:27', '2016-02-22 18:08:23', '', '0000-00-00 00:00:00', 4, '', 1, ''),
(11, 2992, '', 'The list form field type provides a drop down list or a list box of custom-defined entries. If the field has a saved value this is selected when the page is first loaded. If not, the default value (if any) is selected.', 'List', '{\"name\":[\"type\",\"name\",\"label\",\"description\",\"class\",\"multiple\",\"filter\",\"required\",\"option\",\"default\",\"showon\",\"onchange\"],\"example\":[\"list\",\"mylist\",\"Select an option\",\"\",\"list_class\",\"false\",\"\",\"\",\"0|Option 1,1|Option 2,2|Option 1\",\"0\",\"\",\"\"],\"adjustable\":[\"0\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\"],\"mandatory\":[\"1\",\"1\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],\"translatable\":[\"0\",\"0\",\"1\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],\"description\":[\"(mandatory) must be list.\",\"(mandatory) is the unique name of the field.\",\"(mandatory) (translatable) is the descriptive title of the field.\",\"(optional) (translatable) is text that will be shown as a tooltip when the user moves the mouse over the drop-down box.\",\"(optional) is a CSS class name for the HTML form field. If omitted this will default to \'inputbox\'.\",\"(optional) is whether multiple items can be selected at the same time (true or false).\",\"(optional) filter options\",\"(optional) The field must be filled before submitting the form.\",\"(mandatory) set the options of this radio. Separate options with commas and use the pipe symbol to separate value from text.\",\"(optional) is the default list item value.\",\"(optional) Allows you to hide the field based on the value(s) of another field; for Joomla 3.2.4+\",\"(optional) HTML equivalent attribute (javascript use)\"]}', 'provides a drop down list of custom-defined entries.', '', 1, 845, 450, '2015-03-16 18:07:48', '2016-02-22 19:09:08', '', '0000-00-00 00:00:00', 4, '', 5, ''),
(17, 2998, '', 'The radio form field type provides radio buttons to select different options. If the field has a saved value this is selected when the page is first loaded. If not, the default value (if any) is selected.', 'Radio', '{\"name\":[\"type\",\"name\",\"label\",\"description\",\"class\",\"option\",\"default\",\"required\",\"showon\",\"onchange\"],\"example\":[\"radio\",\"myradiovalue\",\"Select an option\",\"\",\"btn-group btn-group-yesno\",\"1|Yes,0|No\",\"0\",\"\",\"\",\"\"],\"adjustable\":[\"0\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\"],\"mandatory\":[\"1\",\"1\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],\"translatable\":[\"0\",\"0\",\"1\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],\"description\":[\"(mandatory) must be radio.\",\"(mandatory) is the unique name of the field.\",\"(mandatory) (translatable) is the descriptive title of the field.\",\"(optional) (translatable) is text that will be shown as a tooltip when the user moves the mouse over the drop-down box.\",\"(optional) New in Joomla 3, if set to class=\\\"btn-group btn-group-yesno\\\" will show the nice coloured buttons\",\"(mandatory) set the options of this radio. Separate options with commas and use the pipe symbol to separate value from text.\",\"(optional) is the default radio button item value.\",\"(optional) The field must be filled before submitting the form.\",\"(optional) Allows you to hide the field based on the value(s) of another field; for Joomla 3.2.4+\",\"(optional) HTML equivalent attribute (javascript use)\"]}', 'provides radio buttons to select different options.', '', 1, 845, 450, '2015-03-16 18:29:51', '2016-02-22 19:08:47', '', '0000-00-00 00:00:00', 4, '', 5, ''),
(24, 3005, '', 'The text form field type provides a text box for data entry. If the field has a value saved, this value is displayed when the page is first loaded. If not, the default value (if any) is selected.', 'Text', '{\"name\":[\"type\",\"name\",\"label\",\"size\",\"maxlength\",\"default\",\"description\",\"class\",\"readonly\",\"disabled\",\"required\",\"filter\",\"validate\",\"field\",\"message\",\"hint\",\"showon\",\"onchange\"],\"example\":[\"text\",\"mytextvalue\",\"Enter some text\",\"10\",\"50\",\"Some text\",\"Enter some description\",\"text_area\",\"false\",\"false\",\"false\",\"STRING\",\"\",\"\",\"Error! Please add some text here.\",\"Your Name Here\",\"\",\"\"],\"adjustable\":[\"0\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\"],\"mandatory\":[\"1\",\"1\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],\"translatable\":[\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\"],\"description\":[\"(mandatory) must be text.\",\"(mandatory) is the unique name of the field.\",\"(mandatory) (translatable) is the descriptive title of the field.\",\"(optional) is the width of the text box in characters. If omitted the width is determined by the browser. The value of size does not limit the number of characters that may be entered.\",\"(optional) limits the number of characters that may be entered.\",\"(optional) (not translatable) is the default value.\",\"(optional) (translatable) is text that will be shown as a tooltip when the user moves the mouse over the drop-down box.\",\"(optional) is a CSS class name for the HTML form field. If omitted this will default to \'text_area\'.\",\"(optional) The field cannot be changed and will automatically inherit the default value\",\"(optional) The field cannot be changed and will automatically inherit the default value - it will also not submit\",\"(optional) The field must be filled before submitting the form.\",\"(optional) allow the system to save certain html tags or raw data.\",\"(optional) makes the system validate the data.\",\"(optional) used in validation of \\\"equals\\\" to link the field to match.\",\"(optional) The error message that will be displayed instead of the default message.\",\"(optional) The placeholder to display inside the text box.\",\"(optional) Allows you to hide the field based on the value(s) of another field; for Joomla 3.2.4+\",\"(optional) HTML equivalent attribute (javascript use)\"]}', 'provides a text box for data entry.', '', 1, 845, 450, '2015-03-19 14:58:08', '2016-02-22 19:11:00', '', '0000-00-00 00:00:00', 5, '', 5, ''),
(25, 3006, '', 'The textarea form field type provides a text area for entry of multi-line text. If the field has a value saved, this value is displayed when the page is first loaded. If not, the default value (if any) is selected.', 'Textarea', '{\"name\":[\"type\",\"name\",\"label\",\"rows\",\"cols\",\"default\",\"description\",\"class\",\"filter\",\"hint\",\"required\",\"showon\",\"onchange\"],\"example\":[\"textarea\",\"mytextarea\",\"Enter some text\",\"10\",\"5\",\"default text\",\"Text Area\",\"text_area\",\"raw\",\"\",\"\",\"\",\"\"],\"adjustable\":[\"0\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\"],\"mandatory\":[\"1\",\"1\",\"1\",\"1\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],\"translatable\":[\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\"],\"description\":[\"(mandatory) must be textarea.\",\"(mandatory) is the unique name of the field.\",\"(mandatory) (translatable) is the descriptive title of the field.\",\"(mandatory) is the height of the visible text area in lines. If omitted the width is determined by the browser. The value of rows does not limit the number of lines that may be entered.\",\"(mandatory) is the width of the visible text area in characters. If omitted the width is determined by the browser. The value of cols does not limit the number of characters that may be entered.\",\"(optional) (not translatable) is the default value.\",\"(optional) (translatable) is text that will be shown as a tooltip when the user moves the mouse over the drop-down box.\",\"(optional) is a CSS class name for the HTML form field. If omitted this will default to \'text_area\'.\",\"(optional) allow the system to save certain html tags or raw data.\",\"(optional) The placeholder to display inside the textarea.\",\"(optional) The field must be filled before submitting the form.\",\"(optional) Allows you to hide the field based on the value(s) of another field; for Joomla 3.2.4+\",\"(optional) HTML equivalent attribute (javascript use)\"]}', 'provides a text area for entry of multi-line text.', '', 1, 845, 450, '2015-03-28 06:13:26', '2016-02-22 19:11:23', '', '0000-00-00 00:00:00', 4, '', 1, '');

--
-- Dumping data for table `#__componentbuilder_help_document`
--

INSERT INTO `#__componentbuilder_help_document` (`id`, `admin_view`, `alias`, `article`, `content`, `groups`, `location`, `not_required`, `site_view`, `target`, `title`, `type`, `url`, `params`, `published`, `version`, `hits`, `ordering`) VALUES
(1, 'components', '2016-03-04-02-31-55', '', '<p>Here as in all Joomla backend list views you can perform all the common tasks, and more.</p>\r\n<h3>Create</h3>\r\n<p>You can create a component by clicking on the\r\n    <button>New</button>button in the toolbar, this will open a window where you can add all the needed values to create a new component.</p>\r\n<h3>Edit</h3>\r\n<p>You can edit components in two ways.</p>\r\n<ul>\r\n    <li>You can click on the box next to the component name and then click on the\r\n        <button>Edit</button>button in the toolbar; this will open the component and if you have permission it will give you access to edit the values of a component.</li>\r\n    <li>You can simply click on the component name; this will open the component and if you have permission it will give you access to edit the values of a component.</li>\r\n</ul>\r\n<h3>Edit State</h3>\r\n<p>You can publish, unpublish, archive, and trash any component by clicking in the boxes next the component names and then click on the corresponding button of the task you want to perform. This will change the state of all the components you’ve selected.</p>\r\n<p>If you have trashed a component it is in the trash and can still be found in the database. To view items that are still in the trash change the “- Select Status –“ filter to Trashed. Here you will see the list of trashed components. To completely remove these components from your system do the following: first select all the components you want to permanently delete by clicking in the boxes next to the component names and then click on the\r\n    <button>Empty trash</button>button in the toolbar. This will permanently delete the components from the database. On the other hand if you would like to change the status of the component to publish, unpublish or archive, click in the boxes next to the component names and then click on the corresponding button of the task you want to perform. This will change the state of all the components you’ve selected.</p>\r\n<h3>Check-in</h3>\r\n<p>When another user on your Joomla website opens a component the system checks the component out to that user. A little lock will show up next to the component name. When you hover over the lock it will show to you who checked it out and when.</p>\r\n<p>Component builder adds a nice feature to all its components that is called the auto check-in feature. This feature has a time setting that you can update in the component\'s global settings.</p>\r\n<p>If this feature has not yet checked-in any of the components that you as the administrator wants to open you can force a check-in by clicking in the boxes next to the component names and then click on the\r\n    <button>Check-in</button>button in the toolbar, or simply click on the little lock. This will then check in the component, which will mean that it removes the component from the user who checked it out before you. Remember that they will lose all changes they have made if they have not yet clicked save. This can cause very unpleasant circumstances, so only use this feature if you are absolutely sure you know what you are doing.</p>\r\n<h3>Batch Feature</h3>\r\n<p>You can use the Batch feature to update or copy many components at once by clicking in the boxes next the component names and then click on the\r\n    <button>Batch</button>button in the toolbar. This will open a popup window with multiple dropdown options of fields you can change with the batch feature. You can then select update or copy depending of your desired task and finally click on the\r\n    <button>Process</button>button. Once completed this batch feature will have either copied or updated all the components according to the task you selected.</p>\r\n<h3>Export & Import</h3>\r\n<p>The export and import feature is some of the most exciting features to the list view of components. With them you can update and create many components at once.</p>\r\n<h3>Export</h3>\r\n<p>The export option only exports the components selected. So to export all components you must change the limited number of components that are being loaded to \"All\". The box that limits the number of components being loaded is found on the right top corner of the page. Simply change it from the number to “All” and the page should now reload with all the component records from the database, excluding those in trash. If you want those also to load you must change the “- Select Status –“ filter to “All” as well. Now you can click on the tick box at the very top of the table. This should select all the components. Next click on the\r\n    <button>Export Date</button>button in the toolbar. This should open a download window and you can select to save the excel file to your computer.</p>\r\n<h3>Import</h3>\r\n<p>The import option can be used to create components or update existing components. The way to update existing components is to use the same id as the component you want to update. Best way to do this is to first export the components you want to update and then make the changes you have in mind in the excel document without removing or changing the id. To instead create new components via an import, simple leave the id field empty.</p>\r\n<p>So once you have your excel document ready you will again open the list view of components and click on the\r\n    <button>Import Data</button>button in the toolbar. This will open a page where you can select the excel file on your computer as an upload, or on the server in a directory, or at any direct url to the excel document.</p>\r\n<p>Once you have the file selected you can click on the\r\n    <button>Upload File</button> or\r\n    <button>Get File</button>button depending on the method you have chosen. When file has successfully been uploaded or retrieved a new window will open where you can map the excel document headers of each column to the field names used in the database. Usually if you’re using an exported version of the excel document this mapping will be done for you, yet if you have changed any of the header names you may need to set these field relationships manually. There is an option to ignore a column in the case when you want to leave a field totally unchanged.</p>\r\n<p>When the field to column relationship has correctly been mapped you can click on the\r\n    <button>continue</button>button at the bottom of the page. This should return you to the list view of components with a success message.</p>\r\n<h3>Debug</h3>\r\n<p>In the event that any of the above features did not work as expected, please read the error message carefully since it should usually give you enough information to why your request could not be processed. Subsequently if you are still not able to perform the request after making all needed corrections according to the error messages, then please contact your system administrator.</p>', '\"\"', 1, '', '', 2, 'Welcome to the List view of Components', 2, '', '', 1, 12, '', 1),
(2, 'admin_views', 'welcome-to-the-list-view-of-admin-views', '', '<p>Here as in all Joomla backend list views you can perform all the common tasks, and more.</p> <h3>Create</h3> <p>You can create an admin view by clicking on the <button>New</button> button in the toolbar, this will open a window where you can add all the needed values to create a new admin view.</p> <h3>Edit</h3> <p>You can edit admin views in two ways.</p> <ul> <li>You can click on the box next to the admin view name and then click on the <button>Edit</button> button in the toolbar; this will open the admin view and if you have permission it will give you access to edit the values of an admin view.</li> <li>You can simply click on the admin view name; this will open the admin view and if you have permission it will give you access to edit the values of an admin view.</li> </ul> <h3>Edit State</h3> <p>You can publish, unpublish, archive, and trash any admin view by clicking in the boxes next the admin view names and then click on the corresponding button of the task you want to perform. This will change the state of all the admin views you’ve selected.</p> <p>If you have trashed an admin view it is in the trash and can still be found in the database. To view items that are still in the trash change the “- Select Status –“ filter to Trashed. Here you will see the list of trashed admin views. To completely remove these admin views from your system do the following: first select all the admin views you want to permanently delete by clicking in the boxes next to the admin view names and then click on the <button>Empty trash</button> button in the toolbar. This will permanently delete the admin views from the database. On the other hand if you would like to change the status of the admin view to publish, unpublish or archive, click in the boxes next to the admin view names and then click on the corresponding button of the task you want to perform. This will change the state of all the admin views you’ve selected.</p> <h3>Check-in</h3> <p>When another user on your Joomla website opens an admin view the system checks the admin view out to that user. A little lock will show up next to the admin view name. When you hover over the lock it will show to you who checked it out and when.</p> <p>Component builder adds a nice feature to all its components that is called the auto check-in feature. This feature has a time setting that you can update in the component\'s global settings.</p> <p>If this feature has not yet checked-in any of the admin views that you as the administrator wants to open you can force a check-in by clicking in the boxes next to the admin view names and then click on the <button>Check-in</button> button in the toolbar, or simply click on the little lock. This will then check in the admin view, which will mean that it removes the admin view from the user who checked it out before you. Remember that they will lose all changes they have made if they have not yet clicked save. This can cause very unpleasant circumstances, so only use this feature if you are absolutely sure you know what you are doing.</p> <h3>Batch Feature</h3> <p>You can use the Batch feature to update or copy many admin views at once by clicking in the boxes next the admin view names and then click on the <button>Batch</button> button in the toolbar. This will open a popup window with multiple dropdown options of fields you can change with the batch feature. You can then select update or copy depending of your desired task and finally click on the <button>Process</button> button. Once completed this batch feature will have either copied or updated all the admin views according to the task you selected.</p> <h3>Export & Import</h3> <p>The export and import feature is some of the most exciting features to the list view of admin views. With them you can update and create many admin views at once.</p> <h3>Export</h3> <p>The export option only exports the admin views selected. So to export all admin views you must change the limited number of admin views that are being loaded to \"All\". The box that limits the number of admin views being loaded is found on the right top corner of the page. Simply change it from the number to “All” and the page should now reload with all the admin view records from the database, excluding those in trash. If you want those also to load you must change the “- Select Status –“ filter to “All” as well. Now you can click on the tick box at the very top of the table. This should select all the admin views. Next click on the <button>Export Date</button> button in the toolbar. This should open a download window and you can select to save the excel file to your computer.</p> <h3>Import</h3> <p>The import option can be used to create admin views or update existing admin views. The way to update existing admin views is to use the same id as the admin view you want to update. Best way to do this is to first export the admin views you want to update and then make the changes you have in mind in the excel document without removing or changing the id. To instead create new admin views via an import, simple leave the id field empty.</p> <p>So once you have your excel document ready you will again open the list view of admin views and click on the <button>Import Data</button> button in the toolbar. This will open a page where you can select the excel file on your computer as an upload, or on the server in a directory, or at any direct url to the excel document.</p> <p>Once you have the file selected you can click on the <button>Upload File</button> or <button>Get File</button> button depending on the method you have chosen. When file has successfully been uploaded or retrieved a new window will open where you can map the excel document headers of each column to the field names used in the database. Usually if you’re using an exported version of the excel document this mapping will be done for you, yet if you have changed any of the header names you may need to set these field relationships manually. There is an option to ignore a column in the case when you want to leave a field totally unchanged.</p> <p>When the field to column relationship has correctly been mapped you can click on the <button>continue</button> button at the bottom of the page. This should return you to the list view of admin views with a success message.</p> <h3>Debug</h3> <p>In the event that any of the above features did not work as expected, please read the error message carefully since it should usually give you enough information to why your request could not be processed. Subsequently if you are still not able to perform the request after making all needed corrections according to the error messages, then please contact your system administrator.</p>', '\"\"', 1, '', '', 2, 'Welcome to the List view of Admin Views', 2, '', '', 1, 1, '', 2),
(3, 'custom_admin_views', 'welcome-to-the-list-view-of-custom-admin-views', '', '<p>Here as in all Joomla backend list views you can perform all the common tasks, and more.</p> <h3>Create</h3> <p>You can create a custom admin view by clicking on the <button>New</button> button in the toolbar, this will open a window where you can add all the needed values to create a new custom admin view.</p> <h3>Edit</h3> <p>You can edit custom admin views in two ways.</p> <ul> <li>You can click on the box next to the custom admin view name and then click on the <button>Edit</button> button in the toolbar; this will open the custom admin view and if you have permission it will give you access to edit the values of a custom admin view.</li> <li>You can simply click on the custom admin view name; this will open the custom admin view and if you have permission it will give you access to edit the values of a custom admin view.</li> </ul> <h3>Edit State</h3> <p>You can publish, unpublish, archive, and trash any custom admin view by clicking in the boxes next the custom admin view names and then click on the corresponding button of the task you want to perform. This will change the state of all the custom admin views you’ve selected.</p> <p>If you have trashed a custom admin view it is in the trash and can still be found in the database. To view items that are still in the trash change the “- Select Status –“ filter to Trashed. Here you will see the list of trashed custom admin views. To completely remove these custom admin views from your system do the following: first select all the custom admin views you want to permanently delete by clicking in the boxes next to the custom admin view names and then click on the <button>Empty trash</button> button in the toolbar. This will permanently delete the custom admin views from the database. On the other hand if you would like to change the status of the custom admin view to publish, unpublish or archive, click in the boxes next to the custom admin view names and then click on the corresponding button of the task you want to perform. This will change the state of all the custom admin views you’ve selected.</p> <h3>Check-in</h3> <p>When another user on your Joomla website opens a custom admin view the system checks the custom admin view out to that user. A little lock will show up next to the custom admin view name. When you hover over the lock it will show to you who checked it out and when.</p> <p>Component builder adds a nice feature to all its components that is called the auto check-in feature. This feature has a time setting that you can update in the component\'s global settings.</p> <p>If this feature has not yet checked-in any of the custom admin views that you as the administrator wants to open you can force a check-in by clicking in the boxes next to the custom admin view names and then click on the <button>Check-in</button> button in the toolbar, or simply click on the little lock. This will then check in the custom admin view, which will mean that it removes the custom admin view from the user who checked it out before you. Remember that they will lose all changes they have made if they have not yet clicked save. This can cause very unpleasant circumstances, so only use this feature if you are absolutely sure you know what you are doing.</p> <h3>Batch Feature</h3> <p>You can use the Batch feature to update or copy many custom admin views at once by clicking in the boxes next the custom admin view names and then click on the <button>Batch</button> button in the toolbar. This will open a popup window with multiple dropdown options of fields you can change with the batch feature. You can then select update or copy depending of your desired task and finally click on the <button>Process</button> button. Once completed this batch feature will have either copied or updated all the custom admin views according to the task you selected.</p> <h3>Export & Import</h3> <p>The export and import feature is some of the most exciting features to the list view of custom admin views. With them you can update and create many custom admin views at once.</p> <h3>Export</h3> <p>The export option only exports the custom admin views selected. So to export all custom admin views you must change the limited number of custom admin views that are being loaded to \"All\". The box that limits the number of custom admin views being loaded is found on the right top corner of the page. Simply change it from the number to “All” and the page should now reload with all the custom admin view records from the database, excluding those in trash. If you want those also to load you must change the “- Select Status –“ filter to “All” as well. Now you can click on the tick box at the very top of the table. This should select all the custom admin views. Next click on the <button>Export Date</button> button in the toolbar. This should open a download window and you can select to save the excel file to your computer.</p> <h3>Import</h3> <p>The import option can be used to create custom admin views or update existing custom admin views. The way to update existing custom admin views is to use the same id as the custom admin view you want to update. Best way to do this is to first export the custom admin views you want to update and then make the changes you have in mind in the excel document without removing or changing the id. To instead create new custom admin views via an import, simple leave the id field empty.</p> <p>So once you have your excel document ready you will again open the list view of custom admin views and click on the <button>Import Data</button> button in the toolbar. This will open a page where you can select the excel file on your computer as an upload, or on the server in a directory, or at any direct url to the excel document.</p> <p>Once you have the file selected you can click on the <button>Upload File</button> or <button>Get File</button> button depending on the method you have chosen. When file has successfully been uploaded or retrieved a new window will open where you can map the excel document headers of each column to the field names used in the database. Usually if you’re using an exported version of the excel document this mapping will be done for you, yet if you have changed any of the header names you may need to set these field relationships manually. There is an option to ignore a column in the case when you want to leave a field totally unchanged.</p> <p>When the field to column relationship has correctly been mapped you can click on the <button>continue</button> button at the bottom of the page. This should return you to the list view of custom admin views with a success message.</p> <h3>Debug</h3> <p>In the event that any of the above features did not work as expected, please read the error message carefully since it should usually give you enough information to why your request could not be processed. Subsequently if you are still not able to perform the request after making all needed corrections according to the error messages, then please contact your system administrator.</p>', '\"\"', 1, '', '', 2, 'Welcome to the List view of Custom Admin Views', 2, '', '', 1, 1, '', 3),
(4, 'site_views', 'welcome-to-the-list-view-of-site-views', '', '<p>Here as in all Joomla backend list views you can perform all the common tasks, and more.</p> <h3>Create</h3> <p>You can create a site view by clicking on the <button>New</button> button in the toolbar, this will open a window where you can add all the needed values to create a new site view.</p> <h3>Edit</h3> <p>You can edit site views in two ways.</p> <ul> <li>You can click on the box next to the site view name and then click on the <button>Edit</button> button in the toolbar; this will open the site view and if you have permission it will give you access to edit the values of a site view.</li> <li>You can simply click on the site view name; this will open the site view and if you have permission it will give you access to edit the values of a site view.</li> </ul> <h3>Edit State</h3> <p>You can publish, unpublish, archive, and trash any site view by clicking in the boxes next the site view names and then click on the corresponding button of the task you want to perform. This will change the state of all the site views you’ve selected.</p> <p>If you have trashed a site view it is in the trash and can still be found in the database. To view items that are still in the trash change the “- Select Status –“ filter to Trashed. Here you will see the list of trashed site views. To completely remove these site views from your system do the following: first select all the site views you want to permanently delete by clicking in the boxes next to the site view names and then click on the <button>Empty trash</button> button in the toolbar. This will permanently delete the site views from the database. On the other hand if you would like to change the status of the site view to publish, unpublish or archive, click in the boxes next to the site view names and then click on the corresponding button of the task you want to perform. This will change the state of all the site views you’ve selected.</p> <h3>Check-in</h3> <p>When another user on your Joomla website opens a site view the system checks the site view out to that user. A little lock will show up next to the site view name. When you hover over the lock it will show to you who checked it out and when.</p> <p>Component builder adds a nice feature to all its components that is called the auto check-in feature. This feature has a time setting that you can update in the component\'s global settings.</p> <p>If this feature has not yet checked-in any of the site views that you as the administrator wants to open you can force a check-in by clicking in the boxes next to the site view names and then click on the <button>Check-in</button> button in the toolbar, or simply click on the little lock. This will then check in the site view, which will mean that it removes the site view from the user who checked it out before you. Remember that they will lose all changes they have made if they have not yet clicked save. This can cause very unpleasant circumstances, so only use this feature if you are absolutely sure you know what you are doing.</p> <h3>Batch Feature</h3> <p>You can use the Batch feature to update or copy many site views at once by clicking in the boxes next the site view names and then click on the <button>Batch</button> button in the toolbar. This will open a popup window with multiple dropdown options of fields you can change with the batch feature. You can then select update or copy depending of your desired task and finally click on the <button>Process</button> button. Once completed this batch feature will have either copied or updated all the site views according to the task you selected.</p> <h3>Export & Import</h3> <p>The export and import feature is some of the most exciting features to the list view of site views. With them you can update and create many site views at once.</p> <h3>Export</h3> <p>The export option only exports the site views selected. So to export all site views you must change the limited number of site views that are being loaded to \"All\". The box that limits the number of site views being loaded is found on the right top corner of the page. Simply change it from the number to “All” and the page should now reload with all the site view records from the database, excluding those in trash. If you want those also to load you must change the “- Select Status –“ filter to “All” as well. Now you can click on the tick box at the very top of the table. This should select all the site views. Next click on the <button>Export Date</button> button in the toolbar. This should open a download window and you can select to save the excel file to your computer.</p> <h3>Import</h3> <p>The import option can be used to create site views or update existing site views. The way to update existing site views is to use the same id as the site view you want to update. Best way to do this is to first export the site views you want to update and then make the changes you have in mind in the excel document without removing or changing the id. To instead create new site views via an import, simple leave the id field empty.</p> <p>So once you have your excel document ready you will again open the list view of site views and click on the <button>Import Data</button> button in the toolbar. This will open a page where you can select the excel file on your computer as an upload, or on the server in a directory, or at any direct url to the excel document.</p> <p>Once you have the file selected you can click on the <button>Upload File</button> or <button>Get File</button> button depending on the method you have chosen. When file has successfully been uploaded or retrieved a new window will open where you can map the excel document headers of each column to the field names used in the database. Usually if you’re using an exported version of the excel document this mapping will be done for you, yet if you have changed any of the header names you may need to set these field relationships manually. There is an option to ignore a column in the case when you want to leave a field totally unchanged.</p> <p>When the field to column relationship has correctly been mapped you can click on the <button>continue</button> button at the bottom of the page. This should return you to the list view of site views with a success message.</p> <h3>Debug</h3> <p>In the event that any of the above features did not work as expected, please read the error message carefully since it should usually give you enough information to why your request could not be processed. Subsequently if you are still not able to perform the request after making all needed corrections according to the error messages, then please contact your system administrator.</p>', '\"\"', 1, '', '', 2, 'Welcome to the List view of Site Views', 2, '', '', 1, 1, '', 4),
(5, 'templates', 'welcome-to-the-list-view-of-templates', '', '<p>Here as in all Joomla backend list views you can perform all the common tasks, and more.</p> <h3>Create</h3> <p>You can create a template by clicking on the <button>New</button> button in the toolbar, this will open a window where you can add all the needed values to create a new template.</p> <h3>Edit</h3> <p>You can edit templates in two ways.</p> <ul> <li>You can click on the box next to the template name and then click on the <button>Edit</button> button in the toolbar; this will open the template and if you have permission it will give you access to edit the values of a template.</li> <li>You can simply click on the template name; this will open the template and if you have permission it will give you access to edit the values of a template.</li> </ul> <h3>Edit State</h3> <p>You can publish, unpublish, archive, and trash any template by clicking in the boxes next the template names and then click on the corresponding button of the task you want to perform. This will change the state of all the templates you’ve selected.</p> <p>If you have trashed a template it is in the trash and can still be found in the database. To view items that are still in the trash change the “- Select Status –“ filter to Trashed. Here you will see the list of trashed templates. To completely remove these templates from your system do the following: first select all the templates you want to permanently delete by clicking in the boxes next to the template names and then click on the <button>Empty trash</button> button in the toolbar. This will permanently delete the templates from the database. On the other hand if you would like to change the status of the template to publish, unpublish or archive, click in the boxes next to the template names and then click on the corresponding button of the task you want to perform. This will change the state of all the templates you’ve selected.</p> <h3>Check-in</h3> <p>When another user on your Joomla website opens a template the system checks the template out to that user. A little lock will show up next to the template name. When you hover over the lock it will show to you who checked it out and when.</p> <p>Component builder adds a nice feature to all its components that is called the auto check-in feature. This feature has a time setting that you can update in the component\'s global settings.</p> <p>If this feature has not yet checked-in any of the templates that you as the administrator wants to open you can force a check-in by clicking in the boxes next to the template names and then click on the <button>Check-in</button> button in the toolbar, or simply click on the little lock. This will then check in the template, which will mean that it removes the template from the user who checked it out before you. Remember that they will lose all changes they have made if they have not yet clicked save. This can cause very unpleasant circumstances, so only use this feature if you are absolutely sure you know what you are doing.</p> <h3>Batch Feature</h3> <p>You can use the Batch feature to update or copy many templates at once by clicking in the boxes next the template names and then click on the <button>Batch</button> button in the toolbar. This will open a popup window with multiple dropdown options of fields you can change with the batch feature. You can then select update or copy depending of your desired task and finally click on the <button>Process</button> button. Once completed this batch feature will have either copied or updated all the templates according to the task you selected.</p> <h3>Export & Import</h3> <p>The export and import feature is some of the most exciting features to the list view of templates. With them you can update and create many templates at once.</p> <h3>Export</h3> <p>The export option only exports the templates selected. So to export all templates you must change the limited number of templates that are being loaded to \"All\". The box that limits the number of templates being loaded is found on the right top corner of the page. Simply change it from the number to “All” and the page should now reload with all the template records from the database, excluding those in trash. If you want those also to load you must change the “- Select Status –“ filter to “All” as well. Now you can click on the tick box at the very top of the table. This should select all the templates. Next click on the <button>Export Date</button> button in the toolbar. This should open a download window and you can select to save the excel file to your computer.</p> <h3>Import</h3> <p>The import option can be used to create templates or update existing templates. The way to update existing templates is to use the same id as the template you want to update. Best way to do this is to first export the templates you want to update and then make the changes you have in mind in the excel document without removing or changing the id. To instead create new templates via an import, simple leave the id field empty.</p> <p>So once you have your excel document ready you will again open the list view of templates and click on the <button>Import Data</button> button in the toolbar. This will open a page where you can select the excel file on your computer as an upload, or on the server in a directory, or at any direct url to the excel document.</p> <p>Once you have the file selected you can click on the <button>Upload File</button> or <button>Get File</button> button depending on the method you have chosen. When file has successfully been uploaded or retrieved a new window will open where you can map the excel document headers of each column to the field names used in the database. Usually if you’re using an exported version of the excel document this mapping will be done for you, yet if you have changed any of the header names you may need to set these field relationships manually. There is an option to ignore a column in the case when you want to leave a field totally unchanged.</p> <p>When the field to column relationship has correctly been mapped you can click on the <button>continue</button> button at the bottom of the page. This should return you to the list view of templates with a success message.</p> <h3>Debug</h3> <p>In the event that any of the above features did not work as expected, please read the error message carefully since it should usually give you enough information to why your request could not be processed. Subsequently if you are still not able to perform the request after making all needed corrections according to the error messages, then please contact your system administrator.</p>', '\"\"', 1, '', '', 2, 'Welcome to the List view of Templates', 2, '', '', 1, 1, '', 5),
(6, 'layouts', 'welcome-to-the-list-view-of-layouts', '', '<p>Here as in all Joomla backend list views you can perform all the common tasks, and more.</p> <h3>Create</h3> <p>You can create a layout by clicking on the <button>New</button> button in the toolbar, this will open a window where you can add all the needed values to create a new layout.</p> <h3>Edit</h3> <p>You can edit layouts in two ways.</p> <ul> <li>You can click on the box next to the layout name and then click on the <button>Edit</button> button in the toolbar; this will open the layout and if you have permission it will give you access to edit the values of a layout.</li> <li>You can simply click on the layout name; this will open the layout and if you have permission it will give you access to edit the values of a layout.</li> </ul> <h3>Edit State</h3> <p>You can publish, unpublish, archive, and trash any layout by clicking in the boxes next the layout names and then click on the corresponding button of the task you want to perform. This will change the state of all the layouts you’ve selected.</p> <p>If you have trashed a layout it is in the trash and can still be found in the database. To view items that are still in the trash change the “- Select Status –“ filter to Trashed. Here you will see the list of trashed layouts. To completely remove these layouts from your system do the following: first select all the layouts you want to permanently delete by clicking in the boxes next to the layout names and then click on the <button>Empty trash</button> button in the toolbar. This will permanently delete the layouts from the database. On the other hand if you would like to change the status of the layout to publish, unpublish or archive, click in the boxes next to the layout names and then click on the corresponding button of the task you want to perform. This will change the state of all the layouts you’ve selected.</p> <h3>Check-in</h3> <p>When another user on your Joomla website opens a layout the system checks the layout out to that user. A little lock will show up next to the layout name. When you hover over the lock it will show to you who checked it out and when.</p> <p>Component builder adds a nice feature to all its components that is called the auto check-in feature. This feature has a time setting that you can update in the component\'s global settings.</p> <p>If this feature has not yet checked-in any of the layouts that you as the administrator wants to open you can force a check-in by clicking in the boxes next to the layout names and then click on the <button>Check-in</button> button in the toolbar, or simply click on the little lock. This will then check in the layout, which will mean that it removes the layout from the user who checked it out before you. Remember that they will lose all changes they have made if they have not yet clicked save. This can cause very unpleasant circumstances, so only use this feature if you are absolutely sure you know what you are doing.</p> <h3>Batch Feature</h3> <p>You can use the Batch feature to update or copy many layouts at once by clicking in the boxes next the layout names and then click on the <button>Batch</button> button in the toolbar. This will open a popup window with multiple dropdown options of fields you can change with the batch feature. You can then select update or copy depending of your desired task and finally click on the <button>Process</button> button. Once completed this batch feature will have either copied or updated all the layouts according to the task you selected.</p> <h3>Export & Import</h3> <p>The export and import feature is some of the most exciting features to the list view of layouts. With them you can update and create many layouts at once.</p> <h3>Export</h3> <p>The export option only exports the layouts selected. So to export all layouts you must change the limited number of layouts that are being loaded to \"All\". The box that limits the number of layouts being loaded is found on the right top corner of the page. Simply change it from the number to “All” and the page should now reload with all the layout records from the database, excluding those in trash. If you want those also to load you must change the “- Select Status –“ filter to “All” as well. Now you can click on the tick box at the very top of the table. This should select all the layouts. Next click on the <button>Export Date</button> button in the toolbar. This should open a download window and you can select to save the excel file to your computer.</p> <h3>Import</h3> <p>The import option can be used to create layouts or update existing layouts. The way to update existing layouts is to use the same id as the layout you want to update. Best way to do this is to first export the layouts you want to update and then make the changes you have in mind in the excel document without removing or changing the id. To instead create new layouts via an import, simple leave the id field empty.</p> <p>So once you have your excel document ready you will again open the list view of layouts and click on the <button>Import Data</button> button in the toolbar. This will open a page where you can select the excel file on your computer as an upload, or on the server in a directory, or at any direct url to the excel document.</p> <p>Once you have the file selected you can click on the <button>Upload File</button> or <button>Get File</button> button depending on the method you have chosen. When file has successfully been uploaded or retrieved a new window will open where you can map the excel document headers of each column to the field names used in the database. Usually if you’re using an exported version of the excel document this mapping will be done for you, yet if you have changed any of the header names you may need to set these field relationships manually. There is an option to ignore a column in the case when you want to leave a field totally unchanged.</p> <p>When the field to column relationship has correctly been mapped you can click on the <button>continue</button> button at the bottom of the page. This should return you to the list view of layouts with a success message.</p> <h3>Debug</h3> <p>In the event that any of the above features did not work as expected, please read the error message carefully since it should usually give you enough information to why your request could not be processed. Subsequently if you are still not able to perform the request after making all needed corrections according to the error messages, then please contact your system administrator.</p>', '\"\"', 1, '', '', 2, 'Welcome to the List view of Layouts', 2, '', '', 1, 1, '', 6),
(7, 'dynamic_gets', 'welcome-to-the-list-view-of-dynamic-gets', '', '<p>Here as in all Joomla backend list views you can perform all the common tasks, and more.</p> <h3>Create</h3> <p>You can create a dynamic get by clicking on the <button>New</button> button in the toolbar, this will open a window where you can add all the needed values to create a new dynamic get.</p> <h3>Edit</h3> <p>You can edit dynamic gets in two ways.</p> <ul> <li>You can click on the box next to the dynamic get name and then click on the <button>Edit</button> button in the toolbar; this will open the dynamic get and if you have permission it will give you access to edit the values of a dynamic get.</li> <li>You can simply click on the dynamic get name; this will open the dynamic get and if you have permission it will give you access to edit the values of a dynamic get.</li> </ul> <h3>Edit State</h3> <p>You can publish, unpublish, archive, and trash any dynamic get by clicking in the boxes next the dynamic get names and then click on the corresponding button of the task you want to perform. This will change the state of all the dynamic gets you’ve selected.</p> <p>If you have trashed a dynamic get it is in the trash and can still be found in the database. To view items that are still in the trash change the “- Select Status –“ filter to Trashed. Here you will see the list of trashed dynamic gets. To completely remove these dynamic gets from your system do the following: first select all the dynamic gets you want to permanently delete by clicking in the boxes next to the dynamic get names and then click on the <button>Empty trash</button> button in the toolbar. This will permanently delete the dynamic gets from the database. On the other hand if you would like to change the status of the dynamic get to publish, unpublish or archive, click in the boxes next to the dynamic get names and then click on the corresponding button of the task you want to perform. This will change the state of all the dynamic gets you’ve selected.</p> <h3>Check-in</h3> <p>When another user on your Joomla website opens a dynamic get the system checks the dynamic get out to that user. A little lock will show up next to the dynamic get name. When you hover over the lock it will show to you who checked it out and when.</p> <p>Component builder adds a nice feature to all its components that is called the auto check-in feature. This feature has a time setting that you can update in the component\'s global settings.</p> <p>If this feature has not yet checked-in any of the dynamic gets that you as the administrator wants to open you can force a check-in by clicking in the boxes next to the dynamic get names and then click on the <button>Check-in</button> button in the toolbar, or simply click on the little lock. This will then check in the dynamic get, which will mean that it removes the dynamic get from the user who checked it out before you. Remember that they will lose all changes they have made if they have not yet clicked save. This can cause very unpleasant circumstances, so only use this feature if you are absolutely sure you know what you are doing.</p> <h3>Batch Feature</h3> <p>You can use the Batch feature to update or copy many dynamic gets at once by clicking in the boxes next the dynamic get names and then click on the <button>Batch</button> button in the toolbar. This will open a popup window with multiple dropdown options of fields you can change with the batch feature. You can then select update or copy depending of your desired task and finally click on the <button>Process</button> button. Once completed this batch feature will have either copied or updated all the dynamic gets according to the task you selected.</p> <h3>Export & Import</h3> <p>The export and import feature is some of the most exciting features to the list view of dynamic gets. With them you can update and create many dynamic gets at once.</p> <h3>Export</h3> <p>The export option only exports the dynamic gets selected. So to export all dynamic gets you must change the limited number of dynamic gets that are being loaded to \"All\". The box that limits the number of dynamic gets being loaded is found on the right top corner of the page. Simply change it from the number to “All” and the page should now reload with all the dynamic get records from the database, excluding those in trash. If you want those also to load you must change the “- Select Status –“ filter to “All” as well. Now you can click on the tick box at the very top of the table. This should select all the dynamic gets. Next click on the <button>Export Date</button> button in the toolbar. This should open a download window and you can select to save the excel file to your computer.</p> <h3>Import</h3> <p>The import option can be used to create dynamic gets or update existing dynamic gets. The way to update existing dynamic gets is to use the same id as the dynamic get you want to update. Best way to do this is to first export the dynamic gets you want to update and then make the changes you have in mind in the excel document without removing or changing the id. To instead create new dynamic gets via an import, simple leave the id field empty.</p> <p>So once you have your excel document ready you will again open the list view of dynamic gets and click on the <button>Import Data</button> button in the toolbar. This will open a page where you can select the excel file on your computer as an upload, or on the server in a directory, or at any direct url to the excel document.</p> <p>Once you have the file selected you can click on the <button>Upload File</button> or <button>Get File</button> button depending on the method you have chosen. When file has successfully been uploaded or retrieved a new window will open where you can map the excel document headers of each column to the field names used in the database. Usually if you’re using an exported version of the excel document this mapping will be done for you, yet if you have changed any of the header names you may need to set these field relationships manually. There is an option to ignore a column in the case when you want to leave a field totally unchanged.</p> <p>When the field to column relationship has correctly been mapped you can click on the <button>continue</button> button at the bottom of the page. This should return you to the list view of dynamic gets with a success message.</p> <h3>Debug</h3> <p>In the event that any of the above features did not work as expected, please read the error message carefully since it should usually give you enough information to why your request could not be processed. Subsequently if you are still not able to perform the request after making all needed corrections according to the error messages, then please contact your system administrator.</p>', '\"\"', 1, '', '', 2, 'Welcome to the List view of Dynamic Gets', 2, '', '', 1, 1, '', 7),
(8, 'snippets', 'welcome-to-the-list-view-of-snippets', '', '<p>Here as in all Joomla backend list views you can perform all the common tasks, and more.</p> <h3>Create</h3> <p>You can create a snippet by clicking on the <button>New</button> button in the toolbar, this will open a window where you can add all the needed values to create a new snippet.</p> <h3>Edit</h3> <p>You can edit snippets in two ways.</p> <ul> <li>You can click on the box next to the snippet name and then click on the <button>Edit</button> button in the toolbar; this will open the snippet and if you have permission it will give you access to edit the values of a snippet.</li> <li>You can simply click on the snippet name; this will open the snippet and if you have permission it will give you access to edit the values of a snippet.</li> </ul> <h3>Edit State</h3> <p>You can publish, unpublish, archive, and trash any snippet by clicking in the boxes next the snippet names and then click on the corresponding button of the task you want to perform. This will change the state of all the snippets you’ve selected.</p> <p>If you have trashed a snippet it is in the trash and can still be found in the database. To view items that are still in the trash change the “- Select Status –“ filter to Trashed. Here you will see the list of trashed snippets. To completely remove these snippets from your system do the following: first select all the snippets you want to permanently delete by clicking in the boxes next to the snippet names and then click on the <button>Empty trash</button> button in the toolbar. This will permanently delete the snippets from the database. On the other hand if you would like to change the status of the snippet to publish, unpublish or archive, click in the boxes next to the snippet names and then click on the corresponding button of the task you want to perform. This will change the state of all the snippets you’ve selected.</p> <h3>Check-in</h3> <p>When another user on your Joomla website opens a snippet the system checks the snippet out to that user. A little lock will show up next to the snippet name. When you hover over the lock it will show to you who checked it out and when.</p> <p>Component builder adds a nice feature to all its components that is called the auto check-in feature. This feature has a time setting that you can update in the component\'s global settings.</p> <p>If this feature has not yet checked-in any of the snippets that you as the administrator wants to open you can force a check-in by clicking in the boxes next to the snippet names and then click on the <button>Check-in</button> button in the toolbar, or simply click on the little lock. This will then check in the snippet, which will mean that it removes the snippet from the user who checked it out before you. Remember that they will lose all changes they have made if they have not yet clicked save. This can cause very unpleasant circumstances, so only use this feature if you are absolutely sure you know what you are doing.</p> <h3>Batch Feature</h3> <p>You can use the Batch feature to update or copy many snippets at once by clicking in the boxes next the snippet names and then click on the <button>Batch</button> button in the toolbar. This will open a popup window with multiple dropdown options of fields you can change with the batch feature. You can then select update or copy depending of your desired task and finally click on the <button>Process</button> button. Once completed this batch feature will have either copied or updated all the snippets according to the task you selected.</p> <h3>Export & Import</h3> <p>The export and import feature is some of the most exciting features to the list view of snippets. With them you can update and create many snippets at once.</p> <h3>Export</h3> <p>The export option only exports the snippets selected. So to export all snippets you must change the limited number of snippets that are being loaded to \"All\". The box that limits the number of snippets being loaded is found on the right top corner of the page. Simply change it from the number to “All” and the page should now reload with all the snippet records from the database, excluding those in trash. If you want those also to load you must change the “- Select Status –“ filter to “All” as well. Now you can click on the tick box at the very top of the table. This should select all the snippets. Next click on the <button>Export Date</button> button in the toolbar. This should open a download window and you can select to save the excel file to your computer.</p> <h3>Import</h3> <p>The import option can be used to create snippets or update existing snippets. The way to update existing snippets is to use the same id as the snippet you want to update. Best way to do this is to first export the snippets you want to update and then make the changes you have in mind in the excel document without removing or changing the id. To instead create new snippets via an import, simple leave the id field empty.</p> <p>So once you have your excel document ready you will again open the list view of snippets and click on the <button>Import Data</button> button in the toolbar. This will open a page where you can select the excel file on your computer as an upload, or on the server in a directory, or at any direct url to the excel document.</p> <p>Once you have the file selected you can click on the <button>Upload File</button> or <button>Get File</button> button depending on the method you have chosen. When file has successfully been uploaded or retrieved a new window will open where you can map the excel document headers of each column to the field names used in the database. Usually if you’re using an exported version of the excel document this mapping will be done for you, yet if you have changed any of the header names you may need to set these field relationships manually. There is an option to ignore a column in the case when you want to leave a field totally unchanged.</p> <p>When the field to column relationship has correctly been mapped you can click on the <button>continue</button> button at the bottom of the page. This should return you to the list view of snippets with a success message.</p> <h3>Debug</h3> <p>In the event that any of the above features did not work as expected, please read the error message carefully since it should usually give you enough information to why your request could not be processed. Subsequently if you are still not able to perform the request after making all needed corrections according to the error messages, then please contact your system administrator.</p>', '\"\"', 1, '', '', 2, 'Welcome to the List view of Snippets', 2, '', '', 1, 1, '', 8),
(9, 'fields', 'welcome-to-the-list-view-of-fields', '', '<p>Here as in all Joomla backend list views you can perform all the common tasks, and more.</p> <h3>Create</h3> <p>You can create a field by clicking on the <button>New</button> button in the toolbar, this will open a window where you can add all the needed values to create a new field.</p> <h3>Edit</h3> <p>You can edit fields in two ways.</p> <ul> <li>You can click on the box next to the field name and then click on the <button>Edit</button> button in the toolbar; this will open the field and if you have permission it will give you access to edit the values of a field.</li> <li>You can simply click on the field name; this will open the field and if you have permission it will give you access to edit the values of a field.</li> </ul> <h3>Edit State</h3> <p>You can publish, unpublish, archive, and trash any field by clicking in the boxes next the field names and then click on the corresponding button of the task you want to perform. This will change the state of all the fields you’ve selected.</p> <p>If you have trashed a field it is in the trash and can still be found in the database. To view items that are still in the trash change the “- Select Status –“ filter to Trashed. Here you will see the list of trashed fields. To completely remove these fields from your system do the following: first select all the fields you want to permanently delete by clicking in the boxes next to the field names and then click on the <button>Empty trash</button> button in the toolbar. This will permanently delete the fields from the database. On the other hand if you would like to change the status of the field to publish, unpublish or archive, click in the boxes next to the field names and then click on the corresponding button of the task you want to perform. This will change the state of all the fields you’ve selected.</p> <h3>Check-in</h3> <p>When another user on your Joomla website opens a field the system checks the field out to that user. A little lock will show up next to the field name. When you hover over the lock it will show to you who checked it out and when.</p> <p>Component builder adds a nice feature to all its components that is called the auto check-in feature. This feature has a time setting that you can update in the component\'s global settings.</p> <p>If this feature has not yet checked-in any of the fields that you as the administrator wants to open you can force a check-in by clicking in the boxes next to the field names and then click on the <button>Check-in</button> button in the toolbar, or simply click on the little lock. This will then check in the field, which will mean that it removes the field from the user who checked it out before you. Remember that they will lose all changes they have made if they have not yet clicked save. This can cause very unpleasant circumstances, so only use this feature if you are absolutely sure you know what you are doing.</p> <h3>Batch Feature</h3> <p>You can use the Batch feature to update or copy many fields at once by clicking in the boxes next the field names and then click on the <button>Batch</button> button in the toolbar. This will open a popup window with multiple dropdown options of fields you can change with the batch feature. You can then select update or copy depending of your desired task and finally click on the <button>Process</button> button. Once completed this batch feature will have either copied or updated all the fields according to the task you selected.</p> <h3>Export & Import</h3> <p>The export and import feature is some of the most exciting features to the list view of fields. With them you can update and create many fields at once.</p> <h3>Export</h3> <p>The export option only exports the fields selected. So to export all fields you must change the limited number of fields that are being loaded to \"All\". The box that limits the number of fields being loaded is found on the right top corner of the page. Simply change it from the number to “All” and the page should now reload with all the field records from the database, excluding those in trash. If you want those also to load you must change the “- Select Status –“ filter to “All” as well. Now you can click on the tick box at the very top of the table. This should select all the fields. Next click on the <button>Export Date</button> button in the toolbar. This should open a download window and you can select to save the excel file to your computer.</p> <h3>Import</h3> <p>The import option can be used to create fields or update existing fields. The way to update existing fields is to use the same id as the field you want to update. Best way to do this is to first export the fields you want to update and then make the changes you have in mind in the excel document without removing or changing the id. To instead create new fields via an import, simple leave the id field empty.</p> <p>So once you have your excel document ready you will again open the list view of fields and click on the <button>Import Data</button> button in the toolbar. This will open a page where you can select the excel file on your computer as an upload, or on the server in a directory, or at any direct url to the excel document.</p> <p>Once you have the file selected you can click on the <button>Upload File</button> or <button>Get File</button> button depending on the method you have chosen. When file has successfully been uploaded or retrieved a new window will open where you can map the excel document headers of each column to the field names used in the database. Usually if you’re using an exported version of the excel document this mapping will be done for you, yet if you have changed any of the header names you may need to set these field relationships manually. There is an option to ignore a column in the case when you want to leave a field totally unchanged.</p> <p>When the field to column relationship has correctly been mapped you can click on the <button>continue</button> button at the bottom of the page. This should return you to the list view of fields with a success message.</p> <h3>Debug</h3> <p>In the event that any of the above features did not work as expected, please read the error message carefully since it should usually give you enough information to why your request could not be processed. Subsequently if you are still not able to perform the request after making all needed corrections according to the error messages, then please contact your system administrator.</p>', '\"\"', 1, '', '', 2, 'Welcome to the List view of Fields', 2, '', '', 1, 1, '', 9),
(10, 'fieldtypes', 'welcome-to-the-list-view-of-fieldtypes', '', '<p>Here as in all Joomla backend list views you can perform all the common tasks, and more.</p> <h3>Create</h3> <p>You can create a fieldtype by clicking on the <button>New</button> button in the toolbar, this will open a window where you can add all the needed values to create a new fieldtype.</p> <h3>Edit</h3> <p>You can edit fieldtypes in two ways.</p> <ul> <li>You can click on the box next to the fieldtype name and then click on the <button>Edit</button> button in the toolbar; this will open the fieldtype and if you have permission it will give you access to edit the values of a fieldtype.</li> <li>You can simply click on the fieldtype name; this will open the fieldtype and if you have permission it will give you access to edit the values of a fieldtype.</li> </ul> <h3>Edit State</h3> <p>You can publish, unpublish, archive, and trash any fieldtype by clicking in the boxes next the fieldtype names and then click on the corresponding button of the task you want to perform. This will change the state of all the fieldtypes you’ve selected.</p> <p>If you have trashed a fieldtype it is in the trash and can still be found in the database. To view items that are still in the trash change the “- Select Status –“ filter to Trashed. Here you will see the list of trashed fieldtypes. To completely remove these fieldtypes from your system do the following: first select all the fieldtypes you want to permanently delete by clicking in the boxes next to the fieldtype names and then click on the <button>Empty trash</button> button in the toolbar. This will permanently delete the fieldtypes from the database. On the other hand if you would like to change the status of the fieldtype to publish, unpublish or archive, click in the boxes next to the fieldtype names and then click on the corresponding button of the task you want to perform. This will change the state of all the fieldtypes you’ve selected.</p> <h3>Check-in</h3> <p>When another user on your Joomla website opens a fieldtype the system checks the fieldtype out to that user. A little lock will show up next to the fieldtype name. When you hover over the lock it will show to you who checked it out and when.</p> <p>Component builder adds a nice feature to all its components that is called the auto check-in feature. This feature has a time setting that you can update in the component\'s global settings.</p> <p>If this feature has not yet checked-in any of the fieldtypes that you as the administrator wants to open you can force a check-in by clicking in the boxes next to the fieldtype names and then click on the <button>Check-in</button> button in the toolbar, or simply click on the little lock. This will then check in the fieldtype, which will mean that it removes the fieldtype from the user who checked it out before you. Remember that they will lose all changes they have made if they have not yet clicked save. This can cause very unpleasant circumstances, so only use this feature if you are absolutely sure you know what you are doing.</p> <h3>Batch Feature</h3> <p>You can use the Batch feature to update or copy many fieldtypes at once by clicking in the boxes next the fieldtype names and then click on the <button>Batch</button> button in the toolbar. This will open a popup window with multiple dropdown options of fields you can change with the batch feature. You can then select update or copy depending of your desired task and finally click on the <button>Process</button> button. Once completed this batch feature will have either copied or updated all the fieldtypes according to the task you selected.</p> <h3>Export & Import</h3> <p>The export and import feature is some of the most exciting features to the list view of fieldtypes. With them you can update and create many fieldtypes at once.</p> <h3>Export</h3> <p>The export option only exports the fieldtypes selected. So to export all fieldtypes you must change the limited number of fieldtypes that are being loaded to \"All\". The box that limits the number of fieldtypes being loaded is found on the right top corner of the page. Simply change it from the number to “All” and the page should now reload with all the fieldtype records from the database, excluding those in trash. If you want those also to load you must change the “- Select Status –“ filter to “All” as well. Now you can click on the tick box at the very top of the table. This should select all the fieldtypes. Next click on the <button>Export Date</button> button in the toolbar. This should open a download window and you can select to save the excel file to your computer.</p> <h3>Import</h3> <p>The import option can be used to create fieldtypes or update existing fieldtypes. The way to update existing fieldtypes is to use the same id as the fieldtype you want to update. Best way to do this is to first export the fieldtypes you want to update and then make the changes you have in mind in the excel document without removing or changing the id. To instead create new fieldtypes via an import, simple leave the id field empty.</p> <p>So once you have your excel document ready you will again open the list view of fieldtypes and click on the <button>Import Data</button> button in the toolbar. This will open a page where you can select the excel file on your computer as an upload, or on the server in a directory, or at any direct url to the excel document.</p> <p>Once you have the file selected you can click on the <button>Upload File</button> or <button>Get File</button> button depending on the method you have chosen. When file has successfully been uploaded or retrieved a new window will open where you can map the excel document headers of each column to the field names used in the database. Usually if you’re using an exported version of the excel document this mapping will be done for you, yet if you have changed any of the header names you may need to set these field relationships manually. There is an option to ignore a column in the case when you want to leave a field totally unchanged.</p> <p>When the field to column relationship has correctly been mapped you can click on the <button>continue</button> button at the bottom of the page. This should return you to the list view of fieldtypes with a success message.</p> <h3>Debug</h3> <p>In the event that any of the above features did not work as expected, please read the error message carefully since it should usually give you enough information to why your request could not be processed. Subsequently if you are still not able to perform the request after making all needed corrections according to the error messages, then please contact your system administrator.</p>', '\"\"', 1, '', '', 2, 'Welcome to the List view of Fieldtypes', 2, '', '', 1, 1, '', 10),
(11, 'help_documents', 'welcome-to-the-list-view-of-help-documents', '', '<p>Here as in all Joomla backend list views you can perform all the common tasks, and more.</p> <h3>Create</h3> <p>You can create a help document by clicking on the <button>New</button> button in the toolbar, this will open a window where you can add all the needed values to create a new help document.</p> <h3>Edit</h3> <p>You can edit help documents in two ways.</p> <ul> <li>You can click on the box next to the help document name and then click on the <button>Edit</button> button in the toolbar; this will open the help document and if you have permission it will give you access to edit the values of a help document.</li> <li>You can simply click on the help document name; this will open the help document and if you have permission it will give you access to edit the values of a help document.</li> </ul> <h3>Edit State</h3> <p>You can publish, unpublish, archive, and trash any help document by clicking in the boxes next the help document names and then click on the corresponding button of the task you want to perform. This will change the state of all the help documents you’ve selected.</p> <p>If you have trashed a help document it is in the trash and can still be found in the database. To view items that are still in the trash change the “- Select Status –“ filter to Trashed. Here you will see the list of trashed help documents. To completely remove these help documents from your system do the following: first select all the help documents you want to permanently delete by clicking in the boxes next to the help document names and then click on the <button>Empty trash</button> button in the toolbar. This will permanently delete the help documents from the database. On the other hand if you would like to change the status of the help document to publish, unpublish or archive, click in the boxes next to the help document names and then click on the corresponding button of the task you want to perform. This will change the state of all the help documents you’ve selected.</p> <h3>Check-in</h3> <p>When another user on your Joomla website opens a help document the system checks the help document out to that user. A little lock will show up next to the help document name. When you hover over the lock it will show to you who checked it out and when.</p> <p>Component builder adds a nice feature to all its components that is called the auto check-in feature. This feature has a time setting that you can update in the component\'s global settings.</p> <p>If this feature has not yet checked-in any of the help documents that you as the administrator wants to open you can force a check-in by clicking in the boxes next to the help document names and then click on the <button>Check-in</button> button in the toolbar, or simply click on the little lock. This will then check in the help document, which will mean that it removes the help document from the user who checked it out before you. Remember that they will lose all changes they have made if they have not yet clicked save. This can cause very unpleasant circumstances, so only use this feature if you are absolutely sure you know what you are doing.</p> <h3>Batch Feature</h3> <p>You can use the Batch feature to update or copy many help documents at once by clicking in the boxes next the help document names and then click on the <button>Batch</button> button in the toolbar. This will open a popup window with multiple dropdown options of fields you can change with the batch feature. You can then select update or copy depending of your desired task and finally click on the <button>Process</button> button. Once completed this batch feature will have either copied or updated all the help documents according to the task you selected.</p> <h3>Export & Import</h3> <p>The export and import feature is some of the most exciting features to the list view of help documents. With them you can update and create many help documents at once.</p> <h3>Export</h3> <p>The export option only exports the help documents selected. So to export all help documents you must change the limited number of help documents that are being loaded to \"All\". The box that limits the number of help documents being loaded is found on the right top corner of the page. Simply change it from the number to “All” and the page should now reload with all the help document records from the database, excluding those in trash. If you want those also to load you must change the “- Select Status –“ filter to “All” as well. Now you can click on the tick box at the very top of the table. This should select all the help documents. Next click on the <button>Export Date</button> button in the toolbar. This should open a download window and you can select to save the excel file to your computer.</p> <h3>Import</h3> <p>The import option can be used to create help documents or update existing help documents. The way to update existing help documents is to use the same id as the help document you want to update. Best way to do this is to first export the help documents you want to update and then make the changes you have in mind in the excel document without removing or changing the id. To instead create new help documents via an import, simple leave the id field empty.</p> <p>So once you have your excel document ready you will again open the list view of help documents and click on the <button>Import Data</button> button in the toolbar. This will open a page where you can select the excel file on your computer as an upload, or on the server in a directory, or at any direct url to the excel document.</p> <p>Once you have the file selected you can click on the <button>Upload File</button> or <button>Get File</button> button depending on the method you have chosen. When file has successfully been uploaded or retrieved a new window will open where you can map the excel document headers of each column to the field names used in the database. Usually if you’re using an exported version of the excel document this mapping will be done for you, yet if you have changed any of the header names you may need to set these field relationships manually. There is an option to ignore a column in the case when you want to leave a field totally unchanged.</p> <p>When the field to column relationship has correctly been mapped you can click on the <button>continue</button> button at the bottom of the page. This should return you to the list view of help documents with a success message.</p> <h3>Debug</h3> <p>In the event that any of the above features did not work as expected, please read the error message carefully since it should usually give you enough information to why your request could not be processed. Subsequently if you are still not able to perform the request after making all needed corrections according to the error messages, then please contact your system administrator.</p>', '\"\"', 1, '', '', 2, 'Welcome to the List view of Help Documents', 2, '', '', 1, 1, '', 11);